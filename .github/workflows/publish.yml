name: Publish Engine plugin

on:
  push:
    branches:
      - main
    paths:
      - '.browserslistrc'
      - 'babel.config.*'
      - 'src/**'
      - '!**/*.test.*'
      - '.github/workflows'

concurrency:
  group: publish-engine-plugin

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-install-cache
        with:
          enableCrossOsArchive: true
          key: npm-install-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          path: node_modules

      - name: Cache build
        uses: actions/cache@v4
        with:
          enableCrossOsArchive: true
          key: npm-build-${{ runner.os }}-${{ github.sha }}
          path: |
            .server
            .public

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version-file: .nvmrc

      - name: Install dependencies
        if: steps.npm-install-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run build
        run: npm run build

  publish:
    name: Publish
    runs-on: ubuntu-24.04
    needs: [build]
    environment: production

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Restore dependencies
        uses: actions/cache/restore@v4
        with:
          enableCrossOsArchive: true
          fail-on-cache-miss: true
          key: npm-install-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          path: node_modules

      - name: Restore build
        uses: actions/cache/restore@v4
        with:
          enableCrossOsArchive: true
          fail-on-cache-miss: true
          key: npm-build-${{ runner.os }}-${{ github.sha }}
          path: |
            .server
            .public

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          registry-url: https://registry.npmjs.org
          scope: '@defra'

      - name: Update package versions
        run: npm version patch --git-tag-version false --save

      - name: Commit and push updates
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -am "v$(npm pkg get version | tr -d \") [skip ci]" && git push

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
