name: Test Documentation Generation

on:
  workflow_dispatch:
    inputs:
      branch_type:
        description: 'Type of branch to simulate'
        required: true
        default: 'main'
        type: choice
        options:
          - main
          - release/v1
          - release/v2
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test-docs-generation:
    runs-on: ubuntu-latest
    environment:
      name: github-pages-test
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Install dependencies
        run: npm ci

      - name: Set branch type based on trigger
        id: set-branch
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "BRANCH_TYPE=${{ github.event.inputs.branch_type }}" >> $GITHUB_ENV
          else
            echo "BRANCH_TYPE=main" >> $GITHUB_ENV
          fi
          echo "VERSION=1.2.3" >> $GITHUB_ENV

      - name: Generate documentation
        run: |
          mkdir -p .github/scripts/docs
          bash .github/scripts/docs/generate-and-publish-docs.sh "$BRANCH_TYPE" "$VERSION"

      - name: Generate and convert documentation
        run: |
          # Install markdown converter
          npm install -g marked
          
          # Clean and setup output folder
          rm -rf _site
          mkdir -p _site
          
          # Copy all docs recursively
          cp -r docs/* _site/
          
          # Touch .nojekyll to disable Jekyll processing
          touch _site/.nojekyll
          
          # Convert all .md files to .html
          find _site -name '*.md' | while read -r file; do
            html_file="${file%.md}.html"
            echo "Converting $file â†’ $html_file"
            npx marked -i "$file" -o "$html_file"
          done
          
          # Rename main entry point
          if [ -f _site/INDEX.html ]; then
            cp _site/INDEX.html _site/index.html
          fi
          
          # Remove all .md files after converting (optional)
          find _site -name '*.md' -delete
          
          echo "Conversion complete!"

      - name: List _site contents
        run: |
          echo "Files in _site after conversion:"
          find _site -type f | sort
          
          # Check index file specifically
          echo "Index file check:"
          ls -la _site/index*
          
          # Peek at the content of the index file
          echo "First 20 lines of index.html:"
          head -n 20 _site/index.html || echo "index.html not found"

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4