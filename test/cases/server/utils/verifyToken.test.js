import { token } from '@hapi/jwt'

import config from '~/src/server/config.js'
import {
  generateSessionTokenForForm,
  verifyToken
} from '~/src/server/plugins/initialiseSession/helpers.js'

describe('verifyToken', function () {
  test('token generated by generateSessionTokenForForm is valid', () => {
    const expiredToken = generateSessionTokenForForm('localhost', 'test')
    const decodedExpiredToken = token.decode(expiredToken)

    expect(verifyToken(decodedExpiredToken).isValid).toBe(true)
  })
  test('can detect expired tokens', () => {
    jest.replaceProperty(config, 'initialisedSessionTimeout', -5)
    const expiredToken = generateSessionTokenForForm('localhost', 'test')
    const decodedExpiredToken = token.decode(expiredToken)

    expect(verifyToken(decodedExpiredToken).isValid).toBe(false)
  })
  test('can detect incorrect key', () => {
    const exampleToken = generateSessionTokenForForm('localhost', 'test')
    const decodedToken = token.decode(exampleToken)

    jest.replaceProperty(config, 'initialisedSessionKey', 'something new')
    expect(verifyToken(decodedToken).isValid).toBe(false)
  })
  test('can detect incorrect algorithm', () => {
    const exampleToken = generateSessionTokenForForm('localhost', 'test')
    const decodedToken = token.decode(exampleToken)

    jest.replaceProperty(config, 'initialisedSessionAlgorithm', 'PS384')
    expect(verifyToken(decodedToken).isValid).toBe(false)
  })
})
